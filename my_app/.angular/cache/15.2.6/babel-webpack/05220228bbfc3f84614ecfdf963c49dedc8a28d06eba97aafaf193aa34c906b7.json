{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet SignupComponent = class SignupComponent {\n  constructor(router, fb, service) {\n    this.router = router;\n    this.fb = fb;\n    this.service = service;\n    this.submit = false;\n    this.valid = false;\n  }\n  // this.myform =this.fb.group({\n  //   firstname: ['',[Validators.required]],\n  //   email: new FormControl('',Validators.required),\n  //   password: new FormControl('',Validators.required),\n  //   mobile: new FormControl('',Validators.required),\n  //   address: new FormControl('',Validators.required),\n  //   confirm: new FormControl('',Validators.required),\n  // })\n  ngOnInit() {\n    this.service.getdata().subscribe(data => {\n      console.log(data);\n    });\n    this.myform = this.fb.group({\n      firstname: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      mobile: ['', [Validators.required, Validators.maxLength(10), Validators.minLength(10), Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n      address: ['', [Validators.required, Validators.minLength(4)]],\n      confirm: ['', [Validators.required, Validators.minLength(4)]]\n    });\n  }\n  onSubmit() {\n    this.submit = true;\n    console.log(this.myform);\n    console.log(this.myform.get('firstname'));\n    // console.log(this.myform.value.password == this.myform.value.confirm);\n    console.log(this.myform.value.firstname.trim().length);\n    if (this.myform.valid && this.myform.value.password == this.myform.value.confirm) {\n      this.service.senddata(this.myform.value).subscribe(data => {\n        console.log(data);\n        if (data == \"success\") {\n          this.router.navigateByUrl(\"/login\");\n        }\n      });\n    } else {\n      alert(\"form is invalid\");\n    }\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);\nexport { SignupComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","SignupComponent","constructor","router","fb","service","ngOnInit","getdata","subscribe","data","console","log","myform","group","firstname","required","minLength","email","password","mobile","maxLength","pattern","address","confirm","onSubmit","submit","get","value","trim","length","valid","senddata","navigateByUrl","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\admin\\my_project\\my_app\\src\\app\\pages\\signup\\signup.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DataService } from 'src/app/services/data.service';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  myform: FormGroup;\n  submit: boolean = false;\n  valid: boolean = false;\n  constructor(private router: Router, private fb: FormBuilder, private service: DataService) {\n\n  }\n  // this.myform =this.fb.group({\n  //   firstname: ['',[Validators.required]],\n  //   email: new FormControl('',Validators.required),\n  //   password: new FormControl('',Validators.required),\n  //   mobile: new FormControl('',Validators.required),\n  //   address: new FormControl('',Validators.required),\n  //   confirm: new FormControl('',Validators.required),\n  // })\n  ngOnInit(): void {\n    this.service.getdata().subscribe((data) => {\n      console.log(data);\n    });\n    this.myform = this.fb.group({\n      firstname: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      mobile: ['', [Validators.required, Validators.maxLength(10), Validators.minLength(10),Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n      address: ['', [Validators.required, Validators.minLength(4)]],\n      confirm: ['', [Validators.required, Validators.minLength(4)]],\n    })\n  }\n  onSubmit() {\n    this.submit = true;\n    console.log(this.myform);\n    console.log(this.myform.get('firstname'));\n   // console.log(this.myform.value.password == this.myform.value.confirm);\n   console.log(this.myform.value.firstname.trim().length);\n\n    if (this.myform.valid && (this.myform.value.password == this.myform.value.confirm)) {\n      this.service.senddata(this.myform.value).subscribe((data) => {\n        console.log(data);\n        if (data == \"success\") {\n          this.router.navigateByUrl(\"/login\");\n        }\n      })\n    } else {\n      alert(\"form is invalid\")\n    }\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}