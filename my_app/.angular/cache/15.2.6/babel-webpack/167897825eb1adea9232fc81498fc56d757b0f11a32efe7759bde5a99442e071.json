{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(htttp) {\n    this.htttp = htttp;\n    this.API = \"http://192.168.178.106:3000/\";\n  }\n  senddata(name, email, mobile, password) {}\n  getdata() {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    const httpOptions = {\n      headers: headers\n    };\n    return this.htttp.get(this.API, {\n      responseType: Text\n    });\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAI9D,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,KAAgB;IAAhB,UAAK,GAALA,KAAK;IADpB,QAAG,GAAG,8BAA8B;EACD;EAEzCC,QAAQ,CAACC,IAAW,EAACC,KAAY,EAACC,MAAa,EAACC,QAAe,GAE/D;EACAC,OAAO;IACN,IAAIC,OAAO,GAAE,IAAIV,WAAW,CAAC;MAAC,cAAc,EAAE;IAAkB,CAAC,CAAC;IAClE,MAAMW,WAAW,GAAG;MAClBD,OAAO,EAAEA;KACV;IACD,OAAO,IAAI,CAACP,KAAK,CAACS,GAAG,CAAC,IAAI,CAACC,GAAG,EAAC;MAACC,YAAY,EAACC;IAAI,CAAC,CAAC;EACpD;;AAbYd,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;EAAAgB,YAFV;AAAM","names":["HttpHeaders","DataService","constructor","htttp","senddata","name","email","mobile","password","getdata","headers","httpOptions","get","API","responseType","Text","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\admin\\my_project\\my_app\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\npublic API = \"http://192.168.178.106:3000/\"\n  constructor(private htttp:HttpClient) { }\n\n senddata(name:string,email:string,mobile:number,password:string){\n\n }\n getdata(){\n  let headers= new HttpHeaders({'Content-Type': 'application/json'});\n  const httpOptions = {\n    headers: headers\n  };\n  return this.htttp.get(this.API,{responseType:Text});\n }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}