{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    //  public API = \"https://viratram3011.onrender.com/\"\n    this.API = \"http://localhost:3011/\";\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      \"authorization\": \"Bearer \" + localStorage.getItem('token')\n    });\n    this.httpOptions = {\n      headers: this.headers\n    };\n  }\n  senddata(myform) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(this.API + \"signup\", [{\n      \"name\": myform.firstname,\n      \"email\": myform.email,\n      \"mobile\": myform.mobile,\n      \"password\": myform.password,\n      \"address\": myform.address\n    }], {\n      responseType: 'text',\n      headers: headers\n    });\n  }\n  getdata() {\n    return this.http.get(this.API, {\n      responseType: \"text\"\n    });\n  }\n  login(myform) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(this.API + \"login\", [{\n      \"name\": myform.name,\n      \"password\": myform.password\n    }], {\n      responseType: 'text',\n      headers: headers\n    });\n  }\n  getdetails() {\n    return this.http.get(this.API + \"details\", {\n      headers: this.headers\n    });\n  }\n  update(myform, id) {\n    return this.http.post(this.API + \"update\", {\n      \"name\": myform.name,\n      \"Mobile\": myform.Mobile,\n      \"Address\": myform.Address,\n      \"LastName\": myform.LastName,\n      \"Id\": id\n    }, {\n      responseType: 'text',\n      headers: this.headers\n    });\n  }\n  createuser(myform) {\n    return this.http.post(this.API + \"newdata\", [{\n      \"name\": myform.name,\n      \"Mobile\": myform.Mobile,\n      \"Address\": myform.Address,\n      \"LastName\": myform.LastName\n    }], {\n      responseType: 'text',\n      headers: this.headers\n    });\n  }\n  delete(id) {\n    return this.http.post(this.API + \"delete\", {\n      \"Id\": id\n    }, {\n      responseType: 'text',\n      headers: this.headers\n    });\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","DataService","constructor","http","localStorage","getItem","headers","senddata","myform","post","API","firstname","email","mobile","password","address","responseType","getdata","get","login","name","getdetails","update","id","Mobile","Address","LastName","createuser","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\admin\\NodeCrud\\my_app\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  //  public API = \"https://viratram3011.onrender.com/\"\n  public API = \"http://localhost:3011/\"\n  constructor(private http: HttpClient) { }\n  headers = new HttpHeaders({ 'Content-Type': 'application/json', \"authorization\": \"Bearer \" + localStorage.getItem('token') })\n  httpOptions = {\n    headers: this.headers\n  };\n  senddata(myform) {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n    return this.http.post(this.API + \"signup\", [{ \"name\": myform.firstname, \"email\": myform.email, \"mobile\": myform.mobile, \"password\": myform.password, \"address\": myform.address }], { responseType: 'text', headers: headers })\n  }\n  getdata() {\n    return this.http.get(this.API, { responseType: \"text\" });\n  }\n  login(myform) {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n    return this.http.post(this.API + \"login\", [{ \"name\": myform.name, \"password\": myform.password }], { responseType: 'text', headers: headers })\n  }\n  getdetails(): Observable<any> {\n    return this.http.get<any>(this.API + \"details\", { headers: this.headers });\n  }\n  update(myform, id: number) {\n    return this.http.post(this.API + \"update\", { \"name\": myform.name, \"Mobile\": myform.Mobile, \"Address\": myform.Address, \"LastName\": myform.LastName, \"Id\": id }, { responseType: 'text', headers: this.headers })\n  }\n  createuser(myform) {\n    return this.http.post(this.API + \"newdata\", [{ \"name\": myform.name, \"Mobile\": myform.Mobile, \"Address\": myform.Address, \"LastName\": myform.LastName }], { responseType: 'text', headers: this.headers })\n  }\n  delete(id) {\n    return this.http.post(this.API + \"delete\", { \"Id\": id }, { responseType: 'text', headers: this.headers })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}