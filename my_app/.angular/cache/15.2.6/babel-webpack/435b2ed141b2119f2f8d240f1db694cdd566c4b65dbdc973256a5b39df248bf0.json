{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.API = \"http://localhost:3000/\";\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    this.httpOptions = {\n      headers: this.headers\n    };\n  }\n  senddata(myform) {\n    return this.http.post(this.API + \"signup\", [{\n      \"name\": myform.firstname,\n      \"email\": myform.email,\n      \"mobile\": myform.mobile,\n      \"password\": myform.password,\n      \"address\": myform.address\n    }], {\n      responseType: 'text',\n      headers: this.headers\n    });\n  }\n  getdata() {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    const httpOptions = {\n      headers: headers\n    };\n    return this.http.get(this.API, {\n      responseType: \"text\"\n    });\n  }\n  login(myform) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    const httpOptions = {\n      headers: headers\n    };\n    return this.http.post(this.API + \"login\", [{\n      \"name\": myform.name,\n      \"password\": myform.password\n    }], {\n      responseType: 'text',\n      headers: headers\n    });\n  }\n  getdetails() {\n    return this.http.get(this.API + \"details\");\n  }\n  update(myform, id) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    const httpOptions = {\n      headers: headers\n    };\n    return this.http.post(this.API + \"update\", {\n      \"name\": myform.name,\n      \"Mobile\": myform.Mobile,\n      \"Address\": myform.Address,\n      \"LastName\": myform.LastName,\n      \"Id\": id\n    }, {\n      responseType: 'text',\n      headers: headers\n    });\n  }\n  createuser(myform) {\n    return this.http.post(this.API + \"newdata\", [{\n      \"name\": myform.name,\n      \"Mobile\": myform.Mobile,\n      \"Address\": myform.Address,\n      \"LastName\": myform.LastName\n    }], {\n      responseType: 'text',\n      headers: headers\n    });\n  }\n  delete(id) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    const httpOptions = {\n      headers: headers\n    };\n    return this.http.post(this.API + \"delete\", {\n      \"Id\": id\n    }, {\n      responseType: 'text',\n      headers: headers\n    });\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","DataService","constructor","http","headers","senddata","myform","post","API","firstname","email","mobile","password","address","responseType","getdata","httpOptions","get","login","name","getdetails","update","id","Mobile","Address","LastName","createuser","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\admin\\my_project\\my_app\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\npublic API = \"http://localhost:3000/\"\n  constructor(private http:HttpClient) { }\n   headers= new HttpHeaders({'Content-Type': 'application/json'});\n  httpOptions = {\n    headers: this.headers\n  };\n senddata(myform){\n   return this.http.post(this.API+\"signup\",[{\"name\":myform.firstname,\"email\":myform.email,\"mobile\":myform.mobile,\"password\":myform.password,\"address\":myform.address}],{responseType:'text',headers:this.headers})\n }\n getdata(){\n  let headers= new HttpHeaders({'Content-Type': 'application/json'});\n  const httpOptions = {\n    headers: headers\n  };\n  return this.http.get(this.API,{responseType:\"text\"});\n }\n login(myform){\n  let headers= new HttpHeaders({'Content-Type': 'application/json'});\n  const httpOptions = {\n    headers: headers\n  };\n  return this.http.post(this.API+\"login\",[{\"name\":myform.name,\"password\":myform.password}],{responseType:'text',headers:headers})\n }\n getdetails(){\n  return this.http.get(this.API+\"details\");\n }\n update(myform,id:number){\n  let headers= new HttpHeaders({'Content-Type': 'application/json'});\n  const httpOptions = {\n    headers: headers\n  };\n   return this.http.post(this.API+\"update\",{\"name\":myform.name,\"Mobile\":myform.Mobile,\"Address\":myform.Address,\"LastName\":myform.LastName,\"Id\":id},{responseType:'text',headers:headers})\n }\n createuser(myform){\n\n   return this.http.post(this.API+\"newdata\",[{\"name\":myform.name,\"Mobile\":myform.Mobile,\"Address\":myform.Address,\"LastName\":myform.LastName}],{responseType:'text',headers:headers})\n }\n delete(id){\n  let headers= new HttpHeaders({'Content-Type': 'application/json'});\n  const httpOptions = {\n    headers: headers\n  };\n return this.http.post(this.API+\"delete\",{\"Id\":id},{responseType:'text',headers:headers})\n }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}