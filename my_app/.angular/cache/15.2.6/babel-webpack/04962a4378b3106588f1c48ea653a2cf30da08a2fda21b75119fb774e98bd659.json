{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.API = \"https://viratram3011.onrender.com/\";\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      \"authorization\": \"Bearer \" + localStorage.getItem('token')\n    });\n    this.httpOptions = {\n      headers: this.headers\n    };\n  }\n  senddata(myform) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(this.API + \"signup\", [{\n      \"name\": myform.firstname,\n      \"email\": myform.email,\n      \"mobile\": myform.mobile,\n      \"password\": myform.password,\n      \"address\": myform.address\n    }], {\n      responseType: 'text',\n      headers: headers\n    });\n  }\n  getdata() {\n    return this.http.get(this.API, {\n      responseType: \"text\"\n    });\n  }\n  login(myform) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(this.API + \"login\", [{\n      \"name\": myform.name,\n      \"password\": myform.password\n    }], {\n      responseType: 'text',\n      headers: headers\n    });\n  }\n  getdetails() {\n    return this.http.get(this.API + \"details\", {\n      headers: this.headers\n    });\n  }\n  update(myform, id) {\n    return this.http.post(this.API + \"update\", {\n      \"name\": myform.name,\n      \"Mobile\": myform.Mobile,\n      \"Address\": myform.Address,\n      \"LastName\": myform.LastName,\n      \"Id\": id\n    }, {\n      responseType: 'text',\n      headers: this.headers\n    });\n  }\n  createuser(myform) {\n    return this.http.post(this.API + \"newdata\", [{\n      \"name\": myform.name,\n      \"Mobile\": myform.Mobile,\n      \"Address\": myform.Address,\n      \"LastName\": myform.LastName\n    }], {\n      responseType: 'text',\n      headers: this.headers\n    });\n  }\n  delete(id) {\n    return this.http.post(this.API + \"delete\", {\n      \"Id\": id\n    }, {\n      responseType: 'text',\n      headers: this.headers\n    });\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","DataService","constructor","http","localStorage","getItem","headers","senddata","myform","post","API","firstname","email","mobile","password","address","responseType","getdata","get","login","name","getdetails","update","id","Mobile","Address","LastName","createuser","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\admin\\NodeCrud\\my_app\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n public API = \"https://viratram3011.onrender.com/\"\n  constructor(private http:HttpClient) { }\n   headers = new HttpHeaders({'Content-Type': 'application/json',\"authorization\":\"Bearer \"+localStorage.getItem('token')})\n   httpOptions = {\n    headers: this.headers\n  };\n senddata(myform){\n  const headers = new HttpHeaders({'Content-Type': 'application/json'})\n   return this.http.post(this.API+\"signup\",[{\"name\":myform.firstname,\"email\":myform.email,\"mobile\":myform.mobile,\"password\":myform.password,\"address\":myform.address}],{responseType:'text',headers:headers})\n }\n getdata(){\n  return this.http.get(this.API,{responseType:\"text\"});\n }\n login(myform){\n  const headers = new HttpHeaders({'Content-Type': 'application/json'})\n  return this.http.post(this.API+\"login\",[{\"name\":myform.name,\"password\":myform.password}],{responseType:'text',headers:headers})\n }\n getdetails():Observable<any>{\n  return this.http.get<any>(this.API+\"details\",{headers:this.headers});\n }\n update(myform,id:number){\n   return this.http.post(this.API+\"update\",{\"name\":myform.name,\"Mobile\":myform.Mobile,\"Address\":myform.Address,\"LastName\":myform.LastName,\"Id\":id},{responseType:'text',headers:this.headers})\n }\n createuser(myform){\n   return this.http.post(this.API+\"newdata\",[{\"name\":myform.name,\"Mobile\":myform.Mobile,\"Address\":myform.Address,\"LastName\":myform.LastName}],{responseType:'text',headers:this.headers})\n }\n delete(id){\n return this.http.post(this.API+\"delete\",{\"Id\":id},{responseType:'text',headers:this.headers})\n }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}